{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFmB,SAAS,gBAAgB,CAAC,sB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEtC,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAG/B,EAAQ,AAFI,EAAM,IAAI,CAEJ,KAAK,CAAC,IAAI,SAAS,CAAC,SAAC,CAA7C,EAAoD,OAAA,IAAO,EAAG,WAAW,E,GAGnE,EACJ,EAAQ,EACJ,EAAM,IAAI,CAAC,EAAE,CAAC,WAAW,GACzB,EAAM,IAAI,CAAC,KAAK,CAAC,EALN,GAMX,IACA,EAAM,IAAI,CAAC,KAAK,CAPL,GAQX,EAAM,IAAI,CAAC,EAAE,CAAC,WAAW,GAAK,EAAM,IAAI,CAAC,KAAK,CAAC,GAErD,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAClC,EAAM,WAAW,CAAG,EACpB,EAAM,YAAY,CAAC,cAAe,GAClC,EAAM,MAAM,CAAC,EACf","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar fields = _to_consumable_array(document.querySelectorAll(\"input.field-text\"));\nfields.forEach(function(field) {\n    var label = document.createElement(\"label\");\n    var fieldName = field.name;\n    var index = fieldName.split(\"\").findIndex(function(ch) {\n        return ch === ch.toUpperCase();\n    });\n    var indexEnd = index;\n    var placeholderText = index > 0 ? field.name[0].toUpperCase() + field.name.slice(1, indexEnd) + \" \" + field.name.slice(indexEnd) : field.name[0].toUpperCase() + field.name.slice(1);\n    label.classList.add(\"field-label\");\n    label.setAttribute(\"for\", field.id);\n    label.textContent = placeholderText;\n    field.setAttribute(\"placeholder\", placeholderText);\n    field.before(label);\n});\n\n//# sourceMappingURL=index.25707d35.js.map\n","'use strict';\n\nconst fields = [...document.querySelectorAll('input.field-text')];\n\nfields.forEach((field) => {\n  const label = document.createElement('label');\n  const fieldName = field.name;\n\n  const index = fieldName.split('').findIndex((ch) => ch === ch.toUpperCase());\n  const indexEnd = index;\n\n  const placeholderText =\n    index > 0\n      ? field.name[0].toUpperCase() +\n        field.name.slice(1, indexEnd) +\n        ' ' +\n        field.name.slice(indexEnd)\n      : field.name[0].toUpperCase() + field.name.slice(1);\n\n  label.classList.add('field-label');\n  label.setAttribute('for', field.id);\n  label.textContent = placeholderText;\n  field.setAttribute('placeholder', placeholderText);\n  field.before(label);\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","fields","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","field","label","createElement","index","fieldName","split","findIndex","ch","toUpperCase","placeholderText","classList","add","setAttribute","id","textContent","before"],"version":3,"file":"index.25707d35.js.map"}